[gd_scene load_steps=14 format=3 uid="uid://baq47jb3rp0up"]

[ext_resource type="Script" uid="uid://d4nm6snf7jf75" path="res://3D/main_3d.gd" id="1_wgehl"]
[ext_resource type="Shader" uid="uid://cvsgnm3vigxbm" path="res://godot_shaders/BoidParticles3D.gdshader" id="2_jvady"]
[ext_resource type="Shader" uid="uid://c30q6mctmckw7" path="res://godot_shaders/MeshOutline.gdshader" id="2_wgehl"]
[ext_resource type="CylinderMesh" uid="uid://co8wwd762j42i" path="res://BoidResources/BoidMesh.tres" id="3_q4bic"]
[ext_resource type="Script" uid="uid://ds22jh6n34if3" path="res://3D/flying_controller.gd" id="4_odw2s"]
[ext_resource type="BoxMesh" uid="uid://5wk0s0jl1qbd" path="res://BoidResources/BoundaryBox.tres" id="5_6hh2s"]
[ext_resource type="Texture2D" uid="uid://d1ly4yx7j74vw" path="res://BoidResources/black square.png" id="7_u4qf1"]
[ext_resource type="Script" uid="uid://di1rtmv0qort2" path="res://3D/slider_menu.gd" id="9_5r7qa"]
[ext_resource type="Script" uid="uid://omimn1bep26k" path="res://3D/slider_menu_part.gd" id="9_kjor4"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_44ouq"]
shader = ExtResource("2_jvady")
shader_parameter/scale = 0.5

[sub_resource type="ShaderMaterial" id="ShaderMaterial_auif7"]
render_priority = 0
shader = ExtResource("2_wgehl")
shader_parameter/border_width = 0.02
shader_parameter/color = Color(0.71918, 0.390659, 0.170161, 1)
shader_parameter/pattern = false
shader_parameter/line_number = 0.0
shader_parameter/line_sharpness = 0.0
shader_parameter/pulse = false
shader_parameter/pulse_speed = 0.0
shader_parameter/line_movement = false
shader_parameter/line_movement_speed = 0.0
shader_parameter/wave = false

[sub_resource type="Shader" id="Shader_44ouq"]
code = "//Copyright 2021 redvillusion
//
//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files 
//(the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, 
//merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished
//to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
//OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
//LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
//IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 
shader_type spatial;
 
render_mode unshaded, cull_front;
 
 
uniform float border_width : hint_range(0,1,0.001);
uniform vec4 color : source_color = vec4(0.0);
 
uniform bool pattern;
uniform float line_number : hint_range(0,100,1);
uniform float line_sharpness : hint_range(0,10,0.001);
 
uniform bool pulse;
uniform float pulse_speed : hint_range(0,100,1);
 
uniform bool line_movement;
uniform float line_movement_speed : hint_range(-100,100,1);
 
uniform bool wave;
 
void vertex() {
	VERTEX += VERTEX * border_width;
}
 
void fragment() {
	ALBEDO = color.xyz;
	if (pattern) 
	{
		vec2 uv = VERTEX.xy * line_number;
		ALBEDO = sin(uv.xxx + uv.yyy) * line_sharpness * color.xyz;
 
		if (pulse)
		{
			ALBEDO = sin(uv.xxx + uv.yyy) * line_sharpness * color.xyz * sin(TIME * pulse_speed);
		}
 
		if (line_movement)
		{
			ALBEDO = sin(uv.xxx + uv.yyy + TIME * line_movement_speed) * line_sharpness * color.xyz;
		}
 
		if (pulse && line_movement)
		{
			ALBEDO = sin(uv.xxx + uv.yyy + TIME * line_movement_speed) * line_sharpness * color.xyz * sin(TIME * pulse_speed);
		}
	}
 
	if (wave)
	{
		vec2 uv = VERTEX.xy * line_number;
		ALBEDO = sin(uv.xxx + TIME * line_movement_speed) * line_sharpness * color.xyz;
	}
 
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_u4qf1"]
render_priority = 0
next_pass = SubResource("ShaderMaterial_auif7")
shader = SubResource("Shader_44ouq")
shader_parameter/border_width = 0.0
shader_parameter/color = Color(0, 0, 0, 1)
shader_parameter/pattern = false
shader_parameter/line_number = 0.0
shader_parameter/line_sharpness = 0.0
shader_parameter/pulse = false
shader_parameter/pulse_speed = 0.0
shader_parameter/line_movement = false
shader_parameter/line_movement_speed = 0.0
shader_parameter/wave = false

[node name="Main3d" type="Node3D"]
script = ExtResource("1_wgehl")
rot_weight = 100.0

[node name="PrimaryLight" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.704473, -0.587366, 0.398395, 0, 0.561333, 0.82759, -0.709731, -0.583015, 0.395444, 0, 0, 0)
light_color = Color(0.998608, 1, 0.903707, 1)

[node name="SecondaryLight" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.600553, 0.177853, -0.779554, -0.627131, -0.500043, -0.597213, -0.496026, 0.847541, -0.188765, 0, 0, 0)
light_color = Color(0.386057, 0.218389, 0.11302, 1)

[node name="BoidParticle3D" type="GPUParticles3D" parent="."]
process_material = SubResource("ShaderMaterial_44ouq")
draw_pass_1 = ExtResource("3_q4bic")

[node name="NoClipCharacter" type="CharacterBody3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -35.7177, 2.86508, 4.24487)
script = ExtResource("4_odw2s")
metadata/_edit_group_ = true

[node name="Camera3D" type="Camera3D" parent="NoClipCharacter"]

[node name="BoundaryBox" type="MeshInstance3D" parent="."]
transform = Transform3D(0.999722, 0, -0.0235772, 0, 1, 0, 0.0235772, 0, 0.999722, 0, 0, 0)
mesh = ExtResource("5_6hh2s")
surface_material_override/0 = SubResource("ShaderMaterial_u4qf1")

[node name="UI" type="CanvasLayer" parent="."]

[node name="BoidDataTexture" type="TextureRect" parent="UI"]
unique_name_in_owner = true
texture_filter = 1
offset_left = 40.0
offset_top = 33.0
offset_right = 147.0
offset_bottom = 140.0
texture = ExtResource("7_u4qf1")

[node name="BoidQuatTexture" type="TextureRect" parent="UI"]
unique_name_in_owner = true
texture_filter = 1
offset_left = 157.0
offset_top = 33.0
offset_right = 264.0
offset_bottom = 140.0
texture = ExtResource("7_u4qf1")

[node name="DebugLabel" type="Label" parent="UI"]
unique_name_in_owner = true
offset_left = 42.0
offset_top = 169.0
offset_right = 360.0
offset_bottom = 360.0
theme_override_font_sizes/font_size = 18
text = "aaaaaaaaaaaaaaaaaaaaaaaaaaa"
autowrap_mode = 1

[node name="SliderMenu" type="PanelContainer" parent="UI" node_paths=PackedStringArray("main_3d")]
offset_left = 1692.0
offset_top = 17.0
offset_right = 1900.0
offset_bottom = 436.0
script = ExtResource("9_5r7qa")
main_3d = NodePath("../..")

[node name="MarginContainer" type="MarginContainer" parent="UI/SliderMenu"]
layout_mode = 2
theme_override_constants/margin_left = 8
theme_override_constants/margin_top = 8
theme_override_constants/margin_right = 8
theme_override_constants/margin_bottom = 8

[node name="SliderMenuContainer" type="VBoxContainer" parent="UI/SliderMenu/MarginContainer"]
unique_name_in_owner = true
layout_mode = 2

[node name="SliderMenuPart" type="HBoxContainer" parent="UI/SliderMenu/MarginContainer/SliderMenuContainer"]
layout_mode = 2
script = ExtResource("9_kjor4")

[node name="property" type="Label" parent="UI/SliderMenu/MarginContainer/SliderMenuContainer/SliderMenuPart"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_font_sizes/font_size = 12
text = "friend radius"

[node name="value" type="HSlider" parent="UI/SliderMenu/MarginContainer/SliderMenuContainer/SliderMenuPart"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 4
value = 22.0

[node name="value_label" type="Label" parent="UI/SliderMenu/MarginContainer/SliderMenuContainer/SliderMenuPart"]
custom_minimum_size = Vector2(32, 0)
layout_mode = 2
theme_override_font_sizes/font_size = 12
text = "0.0"
horizontal_alignment = 1
